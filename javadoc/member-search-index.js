memberSearchIndex = [{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"add(int, E)","u":"add(int,E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"addAll(Collection<? extends E>)","u":"addAll(java.util.Collection)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"addAllFirst(Collection<? extends E>)","u":"addAllFirst(java.util.Collection)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"addAllLast(Collection<? extends E>)","u":"addAllLast(java.util.Collection)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"addFirst(E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"addLast(E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"appendInternal(E, int)","u":"appendInternal(E,int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"appendleftInternal(E, int)","u":"appendleftInternal(E,int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.Block","l":"Block()","u":"%3Cinit%3E()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"BlockDeque()","u":"%3Cinit%3E()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"BlockDeque(Collection<? extends E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"BlockDeque(Collection<? extends E>, int)","u":"%3Cinit%3E(java.util.Collection,int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"BLOCKLEN"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"CENTER"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"clear()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"consumeIterator(Iterator<? extends E>)","u":"consumeIterator(java.util.Iterator)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"count(Object)","u":"count(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.Block","l":"data"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"descendingIterator()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"element()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"forEach(Consumer<? super E>)","u":"forEach(java.util.function.Consumer)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"freeblock(BlockDeque.Block)","u":"freeblock(io.github.gaming32.stdpy.BlockDeque.Block)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"freeblocks"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"get(int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"getFirst()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"getLast()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"getMaxlen()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.DequeIter","l":"hasNext()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"indexOf(Object, int)","u":"indexOf(java.lang.Object,int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"indexOf(Object, int, int)","u":"indexOf(java.lang.Object,int,int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"indexOutOfBounds(int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"iterator()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"leftblock"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"leftindex"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.Block","l":"leftlink"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"MAXFREEBLOCKS"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"maxlen"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"needsTrim(int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"newblock()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.DequeIter","l":"next()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.DequeRevIter","l":"next()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"numfreeblocks"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"offer(E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"offerFirst(E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"offerLast(E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"peek()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"peekFirst()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"peekLast()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"poll()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"pollFirst()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"pollLast()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"pop()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"push(E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"remove()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"remove(int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"removeFirst()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"removeFirstOccurrence(Object)","u":"removeFirstOccurrence(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"removeLast()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"removeLastOccurrence(Object)","u":"removeLastOccurrence(java.lang.Object)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"reverse()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"rightblock"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"rightindex"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque.Block","l":"rightlink"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"rotate()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"rotate(int)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"set(int, E)","u":"set(int,E)"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"size"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"size()"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"state"},{"p":"io.github.gaming32.stdpy","c":"BlockDeque","l":"validIndex(int, int)","u":"validIndex(int,int)"}];updateSearchResults();